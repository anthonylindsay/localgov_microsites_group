<?php

use Drupal\Core\Cache\RefinableCacheableDependencyInterface;
use Drupal\localgov_microsites_group\Entity\MicrositeGroup;
use Drupal\localgov_microsites_group\Entity\MicrositeGroupInterface;
use Drupal\localgov_microsites_group\Form\DomainGroupAdd;
use Drupal\localgov_microsites_group\Form\DomainGroupContentAdd;

/**
 * @file
 * Primary module hooks for LocalGov Microsites Group module.
 */

function localgov_microsites_group_entity_bundle_info_alter(array &$bundles): void {
  if (isset($bundles['group'])) {
    // @todo loop over and check if is a domain group.
    $bundles['group']['microsite']['class'] = MicrositeGroup::class;
  }
}

/**
 * Implements hook_entity_type_build().
 */
function localgov_microsites_group_entity_type_build(array &$entity_types) {
  /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
  $entity_types['group']->setFormClass('new_domain', DomainGroupAdd::class);
  $entity_types['group_content']->setFormClass('new_domain', DomainGroupContentAdd::class);
}

/**
 * Implements hook_menu_local_actions_alter().
 */
function localgov_microsites_menu_local_actions_alter(array &$local_actions) {
  if (!empty($local_actions['group_content.group_node_relate_page']) &&
    !in_array('view.group_nodes.microsites_page', $local_actions['group_content.group_node_relate_page']['appears_on'])
  ) {
    $local_actions['group_content.group_node_relate_page']['appears_on'][] = 'view.group_nodes.microsites_page';
  }
  if (!empty($local_actions['group_content.group_node_add_page']) &&
    !in_array('view.group_nodes.microsites_page', $local_actions['group_content.group_node_add_page']['appears_on'])
  ) {
    $local_actions['group_content.group_node_add_page']['appears_on'][] = 'view.group_nodes.microsites_page';
  }
}

/**
 * Implements hook_menu_locol_tasks_alter().
 */
function localgov_microsites_menu_local_tasks_alter(&$data, $route_name, RefinableCacheableDependencyInterface &$cacheability) {
  if (isset($data['tabs'][0]['group.view'])) {
    if (($group = \Drupal::routeMatch()->getParameter('group')) &&
      $group instanceof MicrositeGroupInterface
    ) {
      $data['tabs'][0]['group.view']['#link']['title'] = t('Dashboard');
    }
    // Really just needs to be the bundle.
    // But should alreday be per group for user perms.
    $cacheability->addCacheableDependency($group);
  }
  if (isset($data['tabs'][0]['domain_group.group_domain_settings'])) {
    if (($group = \Drupal::routeMatch()->getParameter('group')) &&
      $group instanceof MicrositeGroupInterface
    ) {
      $data['tabs'][0]['domain_group.group_domain_settings']['#link']['title'] = t('Site settings');
    }
    $cacheability->addCacheableDependency($group);
  }
  if (isset($data['tabs'][0]['group.edit_form'])) {
    if (($group = \Drupal::routeMatch()->getParameter('group')) &&
      $group instanceof MicrositeGroupInterface
    ) {
      $data['tabs'][0]['group.edit_form']['#link']['title'] = t('Site design');
    }
    $cacheability->addCacheableDependency($group);
  }
}
